


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             datos, DATA
    2 00000000         
    3 00000000 00000003 
                       N       EQU              3
    4 00000000 00000009 
                       Tamanio EQU              N*N
    5 00000000         ;Test_A   DCD 1,0,0,0,1,0,0,0,1
    6 00000000         ;Test_B   DCD 9,8,7,6,5,4,3,2,1
    7 00000000         ;Resultado  SPACE N*N*4
    8 00000000         
    9 00000000                 AREA             codigo,CODE
   10 00000000         
   11 00000000                 EXPORT           matriz3x3_operar_THB
   12 00000000                 PRESERVE8        {TRUE}
   13 00000000                 ARM
   14 00000000         
   15 00000000         matriz3x3_operar_THB
   16 00000000         
   17 00000000 E1A0C00D        MOV              IP, SP      ;PROLOGO
   18 00000004 E92DDFF0        STMDB            SP!, {r4-r10,FP,IP,LR,PC}
   19 00000008 E24CB004        SUB              FP, IP, #4
   20 0000000C E24DD06C        SUB              SP, #108
   21 00000010         
   22 00000010 E1A04000        MOV              r4,r0       ; r4 = @Test_a
   23 00000014 E1A05001        MOV              r5,r1       ; r5 = @Test_b
   24 00000018 E1A06002        MOV              r6,r2       ; r6 = @Test_c
   25 0000001C E1A07003        MOV              r7,r3       ; r7 = @Test_d
   26 00000020 E59C9000        LDR              r9,[IP]     ; r9 = IP = @Result
                                                            ados_E
   27 00000024         
   28 00000024         ;   MOV r0,r1
   29 00000024         ;   ; Pasar como parametro resultados
   30 00000024         ;   ADR r4, Trasponer + 1  ; Processor starts in ARM sta
                       te
   31 00000024         ;   BX r4      ; Inline switch to Thumb state
   32 00000024         ;   THUMB      ; Subsequent instructions are Thumb
   33 00000024         
   34 00000024         
   35 00000024 E1A00006        MOV              r0,r6
   36 00000028 E1A01007        MOV              r1,r7
   37 0000002C E1A02009        MOV              r2,r9
   38 00000030         
   39 00000030 EB000000        bl               Trasponer
   40 00000034                 ARM
   41 00000034         
   42 00000034         
   43 00000034 E91BAFF0        LDMDB            FP, {r4-r10,FP,SP,PC}
   44 00000038         
   45 00000038         ;-------------------------------------------------------
                       ------------SUBRUTINAS----------------------------------
                       ------------------------------------
   46 00000038         
   47 00000038         Trasponer
   48 00000038 E1A0C00D        MOV              IP, SP      ;PROLOGO
   49 0000003C E92DD870        STMDB            SP!, {r4-r6,FP,IP,LR,PC}
   50 00000040 E24CB004        SUB              FP, IP, #4
   51 00000044 E28F4001        ADR              r4,Trasponer_thumb+1
   52 00000048 E12FFF14        bx               r4
   53 0000004C         



ARM Macro Assembler    Page 2 


   54 0000004C         Trasponer_thumb
   55 0000004C                 THUMB
   56 0000004C         
   57 0000004C         ; r0 = @A 
   58 0000004C         
   59 0000004C 4A23            LDR              r2, =N      ; r2 = N
   60 0000004E 2300            MOVS             r3,#0       ; r3 = i
   61 00000050         
   62 00000050         bcl_i
   63 00000050 4293            CMP              r3,r2       ; i < N?
   64 00000052 DA10            bge              epilogo
   65 00000054 2400            MOVS             r4,#0       ; r7 = j
   66 00000056         
   67 00000056         bcl_j
   68 00000056 4294            cmp              r4,r2       ; j < N?
   69 00000058 DA0B            bge              sg_i
   70 0000005A 0015            MOVS             r5,r2       ; r5 = N 
   71 0000005C 435D            MULS             r5,r3,r5    ; r5 = i*N 
   72 0000005E 192D            ADDS             r5,r5,r4    ; r5 = i*N+j
   73 00000060 00AD            LSLS             r5,r5,#2
   74 00000062 5946            LDR              r6,[r0,r5]  ; r6 = CD[i][j]
   75 00000064         
   76 00000064 0015            MOVS             r5,r2       ; r5 = N 
   77 00000066 4365            MULS             r5,r4,r5    ; r5 = j*N 
   78 00000068 18ED            ADDS             r5,r5,r3    ; r5 = j*N+i
   79 0000006A 00AD            LSLS             r5,r5,#2
   80 0000006C 514E            STR              r6,[r1,r5]  ; Traspuesta [j][i]
                                                             = r6 = CD[i][j]
   81 0000006E         
   82 0000006E 1C64            ADDS             r4,r4,#1    ; j++
   83 00000070 E7F1            B                bcl_j
   84 00000072         
   85 00000072         sg_i
   86 00000072 1C5B            ADDS             r3,r3,#1    ; i++
   87 00000074 E7EC            B                bcl_i
   88 00000076         
   89 00000076         
   90 00000076         
   91 00000076         epilogo
   92 00000076 00 00           ARM
   93 00000078 E91BA8F0        LDMDB            FP, {r4-r7,FP,SP,PC}
   94 0000007C         ;-------------------------------------------------------
                       -------------------------------------          
   95 0000007C         
   96 0000007C         
   97 0000007C         Multiplicar
   98 0000007C         
   99 0000007C E1A0C00D        MOV              IP, SP      ;PROLOGO
  100 00000080 E92DDFF0        STMDB            SP!, {r4-r10,FP,IP,LR,PC}
  101 00000084 E24CB004        SUB              FP, IP, #4
  102 00000088 E24DD004        SUB              SP, #4
  103 0000008C E28F4001        ADR              r4,Multiplicar_thumb+1
  104 00000090 E12FFF14        bx               r4
  105 00000094         
  106 00000094         Multiplicar_thumb
  107 00000094                 THUMB
  108 00000094         ; r0 = @A
  109 00000094         ; r1 = @B
  110 00000094         ; r2 = @Resultado



ARM Macro Assembler    Page 3 


  111 00000094         
  112 00000094         
  113 00000094 4C11            LDR              r4,=N       ; r4 = i
  114 00000096         
  115 00000096         bucle_i
  116 00000096 1E64            subs             r4,r4,#1    ; i--
  117 00000098 D420            bmi              epilogo2
  118 0000009A 4D10            LDR              r5,=N       ; r5 = j
  119 0000009C         
  120 0000009C         bucle_j
  121 0000009C 1E6D            subs             r5,r5,#1    ; j--
  122 0000009E D4FA            bmi              bucle_i
  123 000000A0         ; j < 0?
  124 000000A0 4F0E            LDR              r7,=N
  125 000000A2 4367            MULS             r7,r4,r7    ; r7 = i*N + j =[i]
                                                            [j]
  126 000000A4 197F            ADDS             r7,r5       ;
  127 000000A6 00BF            LSLS             r7,r7,#2
  128 000000A8 2300            MOVS             r3,#0       ; r3 = 0
  129 000000AA 51D3            STR              r3,[r2,r7]  ; Resultado[i][j] =
                                                             0 inicialización d
                                                            el elemento
  130 000000AC 9700            STR              r7,[SP]     ; Guardamos r7(indi
                                                            ce [i][j]) como var
                                                            iable local
  131 000000AE         
  132 000000AE 4E0B            LDR              r6,=N       ; r6 = k
  133 000000B0         
  134 000000B0 1E76    bucle_k subs             r6,r6,#1    ; k < N?
  135 000000B2 D4F3            bmi              bucle_j
  136 000000B4         
  137 000000B4         ; A[i][k] y B[k][j]
  138 000000B4         
  139 000000B4 4F09            LDR              r7,=N       ; r7  = N
  140 000000B6         ;mla r8,r4,r7,r6          ; r8  = i*N + K =[i][k]
  141 000000B6 4367            MULS             r7,r4,r7    ; r7 = i*N + j =[i]
                                                            [j]
  142 000000B8 19BF            ADDS             r7,r6       ;
  143 000000BA 00BF            LSLS             r7,r7,#2
  144 000000BC 59C3            LDR              r3,[r0,r7]  ; r3  = A[i][k]
  145 000000BE 4698            MOV              r8,r3       ; r8  = A[i][k]
  146 000000C0         
  147 000000C0 4F06            LDR              r7,=N
  148 000000C2         ;mla r9,r6,r7,r5   ; r9  = k*N + j =[k][j]
  149 000000C2 4377            MULS             r7,r6,r7    ; r7 = i*N + j =[i]
                                                            [j]
  150 000000C4 197F            ADDS             r7,r5       ;
  151 000000C6 00BF            LSLS             r7,r7,#2
  152 000000C8 59CB            LDR              r3,[r1,r7]  ; r3 = B[k][j]
  153 000000CA 4647            MOV              r7,r8       ; r7 = A[i][k]
  154 000000CC         
  155 000000CC         ; A[i][k] * B[k][j]
  156 000000CC         
  157 000000CC 437B            MULS             r3,r7,r3    ; r3  = A[i][k] * B
                                                            [k][j]
  158 000000CE         
  159 000000CE         
  160 000000CE         ;Resultado [i][j] = A[i][k] * B[k][j]
  161 000000CE         



ARM Macro Assembler    Page 4 


  162 000000CE 9F00            LDR              r7,[SP]     ; r7  = i*N + j =[i
                                                            ][j]
  163 000000D0 46B8            MOV              r8,r7       ; r8 =[i][j] 
  164 000000D2 59D7            LDR              r7,[r2,r7]  ; r7 = Resultado[i]
                                                            [j]
  165 000000D4 19DB            ADDS             r3,r7       ; r3 = Resultado[i]
                                                            [j] + A[i][k] * B[k
                                                            ][j]
  166 000000D6 4647            MOV              r7,r8
  167 000000D8 51D3            STR              r3,[r2,r7]  ; Resultado[i]][j] 
                                                            = Resultado[i][j] +
                                                             A[i][k] * B[k][j]
  168 000000DA         
  169 000000DA         
  170 000000DA E7E9            b                bucle_k
  171 000000DC         
  172 000000DC         ;ARM   
  173 000000DC         epilogo2
  174 000000DC         
  175 000000DC         ;LDMDB FP, {r4-r7,FP,SP,PC}   ; Load R2,R6 and R15 (PC) 
                       from the stack
  176 000000DC         
  177 000000DC         
  178 000000DC                 END
              00000003 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\thumb_code.d -o.\objects\thumb_code.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Kei
l_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 526" --list=.\listings\thumb_code.lst Thum
b_code.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

datos 00000000

Symbol: datos
   Definitions
      At line 1 in file Thumb_code.s
   Uses
      None
Comment: datos unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Multiplicar 0000007C

Symbol: Multiplicar
   Definitions
      At line 97 in file Thumb_code.s
   Uses
      None
Comment: Multiplicar unused
Multiplicar_thumb 00000094

Symbol: Multiplicar_thumb
   Definitions
      At line 106 in file Thumb_code.s
   Uses
      At line 103 in file Thumb_code.s
Comment: Multiplicar_thumb used once
Trasponer 00000038

Symbol: Trasponer
   Definitions
      At line 47 in file Thumb_code.s
   Uses
      At line 39 in file Thumb_code.s
Comment: Trasponer used once
Trasponer_thumb 0000004C

Symbol: Trasponer_thumb
   Definitions
      At line 54 in file Thumb_code.s
   Uses
      At line 51 in file Thumb_code.s
Comment: Trasponer_thumb used once
bcl_i 00000050

Symbol: bcl_i
   Definitions
      At line 62 in file Thumb_code.s
   Uses
      At line 87 in file Thumb_code.s
Comment: bcl_i used once
bcl_j 00000056

Symbol: bcl_j
   Definitions
      At line 67 in file Thumb_code.s
   Uses
      At line 83 in file Thumb_code.s
Comment: bcl_j used once
bucle_i 00000096

Symbol: bucle_i
   Definitions
      At line 115 in file Thumb_code.s
   Uses
      At line 122 in file Thumb_code.s
Comment: bucle_i used once
bucle_j 0000009C

Symbol: bucle_j



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 120 in file Thumb_code.s
   Uses
      At line 135 in file Thumb_code.s
Comment: bucle_j used once
bucle_k 000000B0

Symbol: bucle_k
   Definitions
      At line 134 in file Thumb_code.s
   Uses
      At line 170 in file Thumb_code.s
Comment: bucle_k used once
codigo 00000000

Symbol: codigo
   Definitions
      At line 9 in file Thumb_code.s
   Uses
      None
Comment: codigo unused
epilogo 00000076

Symbol: epilogo
   Definitions
      At line 91 in file Thumb_code.s
   Uses
      At line 64 in file Thumb_code.s
Comment: epilogo used once
epilogo2 000000DC

Symbol: epilogo2
   Definitions
      At line 173 in file Thumb_code.s
   Uses
      At line 117 in file Thumb_code.s
Comment: epilogo2 used once
matriz3x3_operar_THB 00000000

Symbol: matriz3x3_operar_THB
   Definitions
      At line 15 in file Thumb_code.s
   Uses
      At line 11 in file Thumb_code.s
Comment: matriz3x3_operar_THB used once
sg_i 00000072

Symbol: sg_i
   Definitions
      At line 85 in file Thumb_code.s
   Uses
      At line 69 in file Thumb_code.s
Comment: sg_i used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000003

Symbol: N
   Definitions
      At line 3 in file Thumb_code.s
   Uses
      At line 4 in file Thumb_code.s
      At line 4 in file Thumb_code.s
      At line 59 in file Thumb_code.s
      At line 113 in file Thumb_code.s
      At line 118 in file Thumb_code.s
      At line 124 in file Thumb_code.s
      At line 132 in file Thumb_code.s
      At line 139 in file Thumb_code.s
      At line 147 in file Thumb_code.s

Tamanio 00000009

Symbol: Tamanio
   Definitions
      At line 4 in file Thumb_code.s
   Uses
      None
Comment: Tamanio unused
2 symbols
351 symbols in table
