


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             datos, DATA
    3 00000000         
    4 00000000 00000003 
                       N       EQU              3
    5 00000000 00000009 
                       Tamanio EQU              N*N
    6 00000000         ;Test_A   DCD 1,0,0,0,1,0,0,0,1
    7 00000000         ;Test_B   DCD 9,8,7,6,5,4,3,2,1
    8 00000000         ;Resultado  SPACE N*N*4
    9 00000000         
   10 00000000         
   11 00000000         
   12 00000000                 AREA             codigo,CODE
   13 00000000         
   14 00000000                 EXPORT           matriz3x3_operar_ARM_C
   15 00000000                 IMPORT           matrizNxN_multiplicar_C
   16 00000000                 PRESERVE8        {TRUE}
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         matriz3x3_operar_ARM_C
   21 00000000         
   22 00000000 E1A0C00D        MOV              IP, SP      ;PROLOGO
   23 00000004 E92DDFF0        STMDB            SP!, {r4-r10,FP,IP,LR,PC}
   24 00000008 E24CB004        SUB              FP, IP, #4
   25 0000000C E24DD06C        SUB              SP, #108    ;Hacemos espacio en
                                                             la pila para las v
                                                            ariables locales, 2
                                                             matrices 3x3 108=9
                                                            *4*3
   26 00000010         ; r0 = Test_A
   27 00000010         ; r1 = Test_B
   28 00000010         ; r2 = Test_C
   29 00000010         ; r3 = Test_D 
   30 00000010         ; RESULTADO_E?¿?¿?¿ deberia estar en la pila al ser e
                       l 5 parametro pero no lo encuentro
   31 00000010         ;SALVAGUARDA DE LAS MEMORIAS DE LAS MATRICES Y MULTIPLIC
                       ACIÓN DE A*B
   32 00000010         
   33 00000010 E1A04000        MOV              r4,r0       ; r4 = @Test_a
   34 00000014 E1A05001        MOV              r5,r1       ; r5 = @Test_b
   35 00000018 E1A06002        MOV              r6,r2       ; r6 = @Test_c
   36 0000001C E1A07003        MOV              r7,r3       ; r7 = @Test_d
   37 00000020 E59C9000        LDR              r9,[IP]     ; r9 = IP = @Result
                                                            ados_E
   38 00000024         
   39 00000024 E1A0200D        MOV              r2,SP       ; r2 =@AB r2 apunta
                                                             a la memoria que h
                                                            emos hecho para las
                                                             variables locales,
                                                             en concreto a dond
                                                            e apunta sp
   40 00000028         
   41 00000028         
   42 00000028 EBFFFFFE        bl               matrizNxN_multiplicar_C
   43 0000002C         
   44 0000002C         ;RECORDATORIO Resultado en SP(AB)
   45 0000002C         



ARM Macro Assembler    Page 2 


   46 0000002C         ;PONEMOS LOS PARAMETROS PARA LLAMAR A MULTPLICAR_C OTRA 
                       VEZ PARA HACER C*D
   47 0000002C         
   48 0000002C E1A00006        mov              r0,r6       ; r0 = @Test_c
   49 00000030 E1A01007        mov              r1,r7       ; r1 = @Test_d
   50 00000034 E28D2024        ADD              r2,SP,#36   ; r2 =@CD r2 apunta
                                                             a la memoria que h
                                                            emos hecho para las
                                                             variables locales,
                                                             en concreto a dond
                                                            e apunta sp+36 que 
                                                            lo que AB
   51 00000038         
   52 00000038 EBFFFFFE        bl               matrizNxN_multiplicar_C
   53 0000003C         
   54 0000003C         ;RECORDATORIO Resultado en SP+36(CD)
   55 0000003C         ;A PARTIR DE AQUI PODRIAMOS HACER USO DE R4-R7 YA QUE YA
                        NO NECESITAMOS LAS MATRICES ORIGINALES
   56 0000003C         
   57 0000003C         ;TRASPUESTA CD
   58 0000003C E28D0024        add              r0,SP,#36   ; r0 = @CD
   59 00000040 E28D1048        add              r1,SP,#72   ; r1 = @Traspuesta
   60 00000044         
   61 00000044 EB00000D        bl               Trasponer
   62 00000048         
   63 00000048         ;RECORDATORIO Resultado en SP+72(CD TRASPUESTA)
   64 00000048         
   65 00000048         ;SUMA AB + CD traspuesta
   66 00000048 E3A00000        mov              r0,#0
   67 0000004C E3A04009        LDR              r4,=Tamanio ; r4 = N
   68 00000050 E1A0500D        mov              r5,SP       ; r5 = AB
   69 00000054 E28D6048        add              r6,SP,#72   ; r6 = CD traspuest
                                                            a
   70 00000058         
   71 00000058 E2544001 
                       suma    subs             r4,r4,#1    ; r4(N)--
   72 0000005C 4A000006        bmi              fin_suma
   73 00000060 E7957104        ldr              r7,[r5,r4,LSL #2] ; r7 = AB[r4]
                                                            
   74 00000064 E7968104        ldr              r8,[r6,r4,LSL #2] ; r8 = CD[r4]
                                                            
   75 00000068 E0888007        add              r8,r8,r7    ; r8=r8+r7
   76 0000006C E3580000        cmp              r8,#0
   77 00000070 12800001        addne            r0,r0,#1    ; r0++ = terminos n
                                                            o cero++
   78 00000074 E7898104        str              r8,[r9,r4,LSL #2] ; Resultado_E
                                                            [r4] = r8
   79 00000078 EAFFFFF6        b                suma
   80 0000007C         fin_suma
   81 0000007C         
   82 0000007C         ;RESULTADOS NO CERO
   83 0000007C         
   84 0000007C         
   85 0000007C E91BAFF0        LDMDB            FP, {r4-r10,FP,SP,PC}
   86 00000080         
   87 00000080         
   88 00000080         
   89 00000080         
   90 00000080         



ARM Macro Assembler    Page 3 


   91 00000080         ;-------------------------------------------------------
                       ------------SUBRUTINAS----------------------------------
                       ------------------------------------
   92 00000080         
   93 00000080         
   94 00000080         
   95 00000080         
   96 00000080         Trasponer
   97 00000080         
   98 00000080 E1A0C00D        MOV              IP, SP      ;PROLOGO
   99 00000084 E92DDFF0        STMDB            SP!, {r4-r10,FP,IP,LR,PC}
  100 00000088 E24CB004        SUB              FP, IP, #4
  101 0000008C         
  102 0000008C         
  103 0000008C         
  104 0000008C E1A04000        mov              r4,r0       ; r4 = @CD
  105 00000090 E1A05001        mov              r5,r1       ; r5 = @Traspuesta
  106 00000094         
  107 00000094 E3A06000        MOV              r6,#0       ; r6 = i
  108 00000098 E3A08003        LDR              r8, =N      ; r8 = N
  109 0000009C         
  110 0000009C         
  111 0000009C         bucle_i
  112 0000009C E1560008        cmp              r6,r8       ; i < N?
  113 000000A0 AA00000C        bge              epilogo
  114 000000A4 E3A07000        mov              r7,#0       ; r7 = j
  115 000000A8         
  116 000000A8         bucle_j
  117 000000A8         ;prologo
  118 000000A8 E1570008        cmp              r7,r8       ; j < N?
  119 000000AC AA000007        bge              sig_i
  120 000000B0 E0090896        mul              r9,r6,r8    ; r9 = i*N = r9
  121 000000B4 E0899007        add              r9,r9,r7    ; r9 = i*N+j
  122 000000B8 E794A109        ldr              r10,[r4,r9, LSL#2] 
                                                            ; r10 = CD[i][j]
  123 000000BC         
  124 000000BC E0090897        mul              r9,r7,r8    ; r9 = jN
  125 000000C0 E0899006        add              r9,r9,r6    ; r9 = jN+i
  126 000000C4         
  127 000000C4 E785A109        str              r10,[r5,r9, LSL #2] ; transpues
                                                            ta[j][i] = matriz [
                                                            i][j]
  128 000000C8 E2877001        add              r7,r7,#1    ; j++
  129 000000CC EAFFFFF5        b                bucle_j
  130 000000D0         
  131 000000D0         sig_i
  132 000000D0 E2866001        add              r6,r6,#1    ; i++
  133 000000D4 EAFFFFF0        b                bucle_i
  134 000000D8         
  135 000000D8         
  136 000000D8 E91BAFF0 
                       epilogo LDMDB            FP, {r4-r10,FP,SP,PC}
  137 000000DC         
  138 000000DC         
  139 000000DC         
  140 000000DC         
  141 000000DC         
  142 000000DC         
  143 000000DC                 END



ARM Macro Assembler    Page 4 


Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\operar.d -o.\objects\operar.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM
\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --prede
fine="__UVISION_VERSION SETA 526" --list=.\listings\operar.lst operar.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

datos 00000000

Symbol: datos
   Definitions
      At line 2 in file operar.s
   Uses
      None
Comment: datos unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Trasponer 00000080

Symbol: Trasponer
   Definitions
      At line 96 in file operar.s
   Uses
      At line 61 in file operar.s
Comment: Trasponer used once
bucle_i 0000009C

Symbol: bucle_i
   Definitions
      At line 111 in file operar.s
   Uses
      At line 133 in file operar.s
Comment: bucle_i used once
bucle_j 000000A8

Symbol: bucle_j
   Definitions
      At line 116 in file operar.s
   Uses
      At line 129 in file operar.s
Comment: bucle_j used once
codigo 00000000

Symbol: codigo
   Definitions
      At line 12 in file operar.s
   Uses
      None
Comment: codigo unused
epilogo 000000D8

Symbol: epilogo
   Definitions
      At line 136 in file operar.s
   Uses
      At line 113 in file operar.s
Comment: epilogo used once
fin_suma 0000007C

Symbol: fin_suma
   Definitions
      At line 80 in file operar.s
   Uses
      At line 72 in file operar.s
Comment: fin_suma used once
matriz3x3_operar_ARM_C 00000000

Symbol: matriz3x3_operar_ARM_C
   Definitions
      At line 20 in file operar.s
   Uses
      At line 14 in file operar.s
Comment: matriz3x3_operar_ARM_C used once
sig_i 000000D0

Symbol: sig_i



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 131 in file operar.s
   Uses
      At line 119 in file operar.s
Comment: sig_i used once
suma 00000058

Symbol: suma
   Definitions
      At line 71 in file operar.s
   Uses
      At line 79 in file operar.s
Comment: suma used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000003

Symbol: N
   Definitions
      At line 4 in file operar.s
   Uses
      At line 5 in file operar.s
      At line 5 in file operar.s
      At line 108 in file operar.s

Tamanio 00000009

Symbol: Tamanio
   Definitions
      At line 5 in file operar.s
   Uses
      At line 67 in file operar.s
Comment: Tamanio used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

matrizNxN_multiplicar_C 00000000

Symbol: matrizNxN_multiplicar_C
   Definitions
      At line 15 in file operar.s
   Uses
      At line 42 in file operar.s
      At line 52 in file operar.s

1 symbol
345 symbols in table
